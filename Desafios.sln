namespace Desafios;
using System;
using System.Diagnostics;
using System.Globalization;
using System.Text.RegularExpressions;

class Program() 
{
   

    static void Main()
    {


        // --------------------------------------// Exemplo 1 ---------------------------------------//

        /* Console.WriteLine("Digite seu nome:");
         string nome = Console.ReadLine(); // Lê o nome do usuário e armazena na variável nome

         Console.WriteLine("Olá " + nome + " " + "Seja muito bem vindo!"); */



        //--------------------------------------// Exemplo 2 ---------------------------------------//




        /* Console.WriteLine("Digite seu primeiro nome:");
         string primeiroNome = Console.ReadLine();

         Console.WriteLine("Digite seu sobrenome:");
         string sobrenome = Console.ReadLine();
         string nomeCompleto = primeiroNome + " " + sobrenome;

         Console.WriteLine("Seu nome completo é: " + nomeCompleto); */



        // --------------------------------------// Exemplo 3 ---------------------------------------//



        /* Para que o usuário possa digitar os valores de numero1 e numero2, você devemos usar Console.ReadLine() 
            para capturar a entrada e depois converter essa entrada de string para double com double.Parse()

         Console.WriteLine("Digite o primeiro número:");
          double numero1 = double.Parse(Console.ReadLine()); // Lê o primeiro número e converte para double

          Console.WriteLine("Digite o segundo número:");
          double numero2 = double.Parse(Console.ReadLine());

          var resultado = numero1 + numero2;
          Console.WriteLine("A soma de " + numero1 + " e " + numero2 + " é: " + resultado);

          var resultadoSubtracao = numero1 - numero2;
          Console.WriteLine("A subtração de " + numero1 + " e " + numero2 + " é: " + resultadoSubtracao);

          var resultadoMultiplicacao = numero1 * numero2;
          Console.WriteLine("A multiplicação de " + numero1 + " e " + numero2 + " é: " + resultadoMultiplicacao);

          var resultadoDivisao = numero1 / numero2;
          Console.WriteLine("A divisão de " + numero1 + " e " + numero2 + " é: " + resultadoDivisao);
          if (numero2 != 0) // Verifica se o divisor é diferente de zero para evitar divisão por zero
          {
              Console.WriteLine("A divisão de " + numero1 + " por " + numero2 + " é: " + resultadoDivisao);
          }
          else
          {
              Console.WriteLine("Divisão por zero não é permitido.");
          } 

        var resultadoMedia = (numero1 + numero2)/2 ;
          Console.WriteLine("A media de " + numero1 + " e " + numero2 + " é: " + resultadoMedia); */


        // --------------------------------------// Exemplo 4 ---------------------------------------//



        /* Console.WriteLine("Digite o que você quiser");
        string frase = Console.ReadLine(); // Lê a entrada do usuário e armazena na variável input que será uma string

        int quantidadePalavras = frase.Split(' ').Length;

        Console.WriteLine("Você digitou " + quantidadePalavras + " palavra(s).");*/

        //usamos o frase.Split(' ') para dividir a frase em palavras, usando o espaço como delimitador e o.length para contar quantas palavras foram digitadas.



        // --------------------------------------// Exemplo 5 ---------------------------------------//



        /* Console.WriteLine("Digite a placa do veículo (padrão antigo): ");
         string placa = Console.ReadLine().ToUpper().Trim(); // Lê a placa do veículo, converte para maiúsculas e remove espaços em branco no início e no final da string


         string padraoPlacaAntiga = @"^[A-Z]{3}[0-9]{4}$"; //o ^[A-Z]{3} indica que a placa deve começar com 3 letras maiúsculas, e o [0-9]{4}$ indica que deve terminar com 4 dígitos numéricos.

         if (Regex.IsMatch(placa, padraoPlacaAntiga)) //o Regex.IsMatch verifica se a placa corresponde ao padrão definido
         {
             Console.WriteLine("Placa válida (padrão antigo).");
         }
         else
         {
             Console.WriteLine("Placa inválida.");
         }*/


        // --------------------------------------// Exemplo 6 ---------------------------------------//

        /*
            Console.WriteLine("Digite uma data no formato dd/MM/yyyy: ");
            string entrada = Console.ReadLine();

            CultureInfo cultura = new CultureInfo("pt-BR");

            // Tenta converter a entrada para uma data 
            if (DateTime.TryParseExact(entrada, "dd/MM/yyyy", cultura, DateTimeStyles.None, out DateTime data))
            {
                Console.WriteLine("\nFormatos diferentes:");
                Console.WriteLine("1 - Formato completo: " + data.ToString("dddd, dd 'de' MMMM 'de' yyyy", cultura));
                Console.WriteLine("2 - Apenas a data: " + data.ToString("dd/MM/yyyy"));
                Console.WriteLine("3 - Data com mês por extenso: " + data.ToString("dd 'de' MMMM 'de' yyyy", cultura));
            }
            else
            {
                Console.WriteLine("Data inválida! Use o formato dd/MM/yyyy.");

             //data.tostring é usado para formatar a data de acordo com o padrão escolhido. 
            //tryparseexact tenta converter a string de entrada para um objeto DateTime, usando o formato especificado e a cultura fornecida. 
           //Se a conversão falhar, ele retorna false e exibe uma mensagem de erro.
        }*/
    }
}


